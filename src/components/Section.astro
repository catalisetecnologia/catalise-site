---
import type { CollectionEntry } from "astro:content";
import { Modal } from "accessible-astro-components";
import Botao from "./Botao.astro";
import Link from "./Link.astro";

interface Props {
  vlink?: CollectionEntry<"produtos">;
  id?: string;
  estilo?: string;
  tag?: string;
  colunas?: string;
  titulo: string;
  subtitulo?: string;
  linha?: boolean;
  botao?: string;
  video?: boolean;
  link?: string;
  key?: string;
}
const {
  id,
  estilo,
  titulo,
  subtitulo,
  botao,
  video,
  vlink,
  link,
  linha,
  key,
  tag,
  colunas,
} = Astro.props;

const filtro = vlink?.data.content.filter((item) => item.key === key);
---

<section class={estilo}>
  <div>
    <div>
      <span>{tag}</span>
      <h1>{titulo}</h1>
      <p>{subtitulo}</p>
      <slot name="conteudo" />
    </div>
    {botao && <Botao estilo="claro grande mt-3" texto={botao} link={link} />}
    {link && !botao && <Link estilo="claro grande" texto={link} />}
  </div>
  {
    video && (
      <div class={"video conteudo " + colunas} id={key}>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 104 104"
          class="play-interno"
        >
          <g filter="url(#filter0_b_1_145)">
            <circle
              cx="51.75"
              cy="51.76"
              r="51.63"
              fill="#42F5E1"
              fill-opacity=".7"
            />
          </g>
          <path
            fill="#FBFCFD"
            d="M71.11 47.35a4.98 4.98 0 0 1 0 8.58L45.1 71.23a4.98 4.98 0 0 1-7.5-4.28V36.33a4.98 4.98 0 0 1 7.5-4.3l26 15.33Z"
          />
          <defs>
            <filter
              id="filter0_b_1_145"
              width="109.9"
              height="109.9"
              x="-3.2"
              y="-3.19"
              color-interpolation-filters="sRGB"
              filterUnits="userSpaceOnUse"
            >
              <feFlood flood-opacity="0" result="BackgroundImageFix" />
              <feGaussianBlur in="BackgroundImageFix" stdDeviation="1.66" />
              <feComposite
                in2="SourceAlpha"
                operator="in"
                result="effect1_backgroundBlur_1_145"
              />
              <feBlend
                in="SourceGraphic"
                in2="effect1_backgroundBlur_1_145"
                result="shape"
              />
            </filter>
          </defs>
        </svg>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 123 123"
          class="play-externo"
        >
          <g filter="url(#filter0_b_536_2)">
            <circle
              cx="61.5"
              cy="61.5"
              r="60"
              stroke="#42F5E1"
              stroke-opacity=".2"
              stroke-width="3"
            />
          </g>
          <defs>
            <filter
              id="filter0_b_536_2"
              width="129.64"
              height="129.64"
              x="-3.32"
              y="-3.32"
              color-interpolation-filters="sRGB"
              filterUnits="userSpaceOnUse"
            >
              <feFlood flood-opacity="0" result="BackgroundImageFix" />
              <feGaussianBlur in="BackgroundImageFix" stdDeviation="1.66" />
              <feComposite
                in2="SourceAlpha"
                operator="in"
                result="effect1_backgroundBlur_536_2"
              />
              <feBlend
                in="SourceGraphic"
                in2="effect1_backgroundBlur_536_2"
                result="shape"
              />
            </filter>
          </defs>
        </svg>
        <slot />
      </div>
    )
  }
  {
    video &&
      filtro?.map((item) => (
        <Modal triggerId={item.key} closeText="X">
          <div class="wrapper">
            <div class="youtube" data-embed={item.video}>
              <div class="play-button" />
            </div>
          </div>
        </Modal>
      ))
  }
  {
    !video && (
      <div class={"conteudo " + colunas}>
        {" "}
        <slot />{" "}
      </div>
    )
  }
</section>
<script>
  (function () {
    var youtube = document.querySelectorAll(".youtube");

    for (var i = 0; i < youtube.length; i++) {
      var source =
        "https://img.youtube.com/vi/" +
        youtube[i].dataset.embed +
        "/sddefault.jpg";

      var image = new Image();
      image.src = source;
      image.addEventListener(
        "load",
        (function () {
          youtube[i].appendChild(image);
        })(i)
      );

      youtube[i].addEventListener("click", function () {
        var iframe = document.createElement("iframe");

        iframe.setAttribute("frameborder", "0");
        iframe.setAttribute("allowfullscreen", "");
        iframe.setAttribute(
          "src",
          "https://www.youtube.com/embed/" +
            this.dataset.embed +
            "?rel=0&showinfo=0&autoplay=1"
        );

        this.innerHTML = "";
        this.appendChild(iframe);
      });
    }
  })();
</script>

<style scoped>
  section {
    width: 100%;
    position: relative;
    z-index: 2;
    overflow: hidden;
  }
  section > div:first-child {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    z-index: 1;
    max-width: none;
  }
  section > div:first-child div:first-child {
    max-width: 100%;
  }
  .conteudo {
    width: 100%;
    display: flex;
    gap: 1rem;
    place-items: center;
    place-content: center;
    margin-top: 2rem;
    overflow: unset;
  }
  .col3 {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(19rem, 1fr));
  }
  .col4 {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr));
  }
  .g4 {
    row-gap: 4rem;
  }
  .claro {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 2rem;
    background: linear-gradient(
      80deg,
      hsl(226, 100%, 97%),
      hsl(200, 100%, 80%)
    );
    border-radius: 2rem;
    width: calc(85vw - 2rem);
    padding: 3rem;
    color: var(--clr-black);
    box-shadow:
      -2rem -2rem 8rem hsl(215, 100%, 30%),
      2rem 3rem 8rem hsl(195, 100%, 24%);
    overflow: hidden;
    z-index: 1;
  }
  .claro > div:first-child {
    z-index: 1;
  }
  .claro > div:first-child div:first-child {
    max-width: 100%;
  }
  .claro .conteudo {
    gap: 1rem;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    margin-top: 0;
  }
  .claro div {
    max-width: 1200px;
  }
  .claro span {
    color: var(--clr-blue);
  }
  .centro {
    display: flex;
    flex-direction: column;
    text-align: center;
    place-content: center;
    place-items: center;
    padding: 3rem;
    width: -webkit-fill-available;
  }

  .centro > div:first-child {
    display: block;
    max-width: 39rem;
  }
  .centro > div:first-child div:first-child {
    max-width: 100%;
  }
  .centro .conteudo {
    place-content: space-evenly;
  }
  span {
    font-family: var(--font-bold);
    font-size: clamp(0.9rem, 1.2vw, 1.4rem);
    color: var(--clr-yellow);
    line-height: 2.5;
  }
  h1 {
    font-size: clamp(1.9rem, 3.5vw, 2.7rem);
  }
  .claro h1 {
    font-family: var(--font-black);
  }
  p {
    font-family: var(--font-book);
    font-size: clamp(0.9rem, 1.2vw, 1.1rem);
    margin-top: 1.4rem;
  }
  .aprovacoes {
    min-height: 26rem;
  }
  .video {
    display: flex;
    justify-content: center;
    align-items: center;
    transition: 0.5s ease;
    filter: brightness(0.8);
    cursor: pointer;
  }
  .video:hover {
    filter: brightness(1);
  }
  .video svg {
    position: absolute;
    z-index: 9;
    transition: all 0.4s ease;
    filter: brightness(2) contrast(3) saturate(3);
    box-shadow: 0 0 4rem 0rem;
    border-radius: 100rem;
  }
  .play-interno {
    width: clamp(4rem, 6vw, 6rem);
    height: auto;
    margin-bottom: 0;
  }
  .play-externo {
    width: clamp(5rem, 8vw, 7rem);
    height: auto;
    transform: scale(0.9);
    margin-bottom: 0;
  }
  .video:hover .play-externo {
    transform: scale(1);
  }
  @media screen and (min-width: 768px) {
    .claro {
      width: -webkit-fill-available;
    }
    section > div:first-child div:first-child {
      max-width: 32rem;
    }
  }
  @media screen and (min-width: 1026px) {
    .claro {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 6rem;
      place-content: center;
      width: clamp(20rem, 80vw, 75rem);
      padding: 5rem 6rem;
    }
    .claro.centro {
      padding: 5rem 6rem;
    }
    .centro {
      grid-template-columns: 1fr;
      padding: 0;
    }
    .claro > div:first-child {
      max-width: 34rem;
    }
  }
</style>
